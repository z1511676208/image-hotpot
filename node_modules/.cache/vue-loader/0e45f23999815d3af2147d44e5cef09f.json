{"remainingRequest":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edy/Desktop/gitlab/image-hotpot/src/components/plugin/element/form/el-form-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edy/Desktop/gitlab/image-hotpot/src/components/plugin/element/form/el-form-group.vue","mtime":1628478882844},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js","mtime":1628478904830},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1628478909545}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ElImgUpload from './el-img-upload'\nimport ElImgUploadGroup from './el-img-upload-group'\n\nexport default {\n  name: 'ElFormGroup',\n  components: {\n    ElImgUpload,\n    ElImgUploadGroup\n  },\n  props: {\n    labelWidth: {\n      type: Number,\n      default: 120\n    },\n    // 验证规则，参考element\n    formRules: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    // 表单子项列表\n    formItemList: {\n      type: Array,\n      required: true\n    },\n    // 初始化数据\n    initData: {\n      type: Object,\n      default() {\n        return null\n      }\n    },\n\n    confirmBtnName: {\n      type: String,\n      default: '提交'\n    },\n\n    needBtnLoading: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      isLoading: false,\n      formData: {},\n      deleteArr: []\n    }\n  },\n  created() {\n    if (this.initData) {\n      this.formData = this.initData\n      return\n    }\n    this.formItemList.forEach(n => {\n      if (n.type === 'checkbox') {\n        this.$set(this.formData, n.key, [])\n      } else {\n        this.$set(this.formData, n.key, '')\n      }\n    })\n  },\n  methods: {\n    // 如果删除图片\n    handleUploadDelete(key) {\n      this.formData[key] = ''\n    },\n\n    // 上传图片后，将图片信息保存到对应参数中\n    handleUploadChange(url, key) {\n      this.formData[key] = url\n    },\n\n    // 上传图片后，将图片信息保存到对应参数中\n    handleUploadGroupChange(list, key) {\n      if (Array.isArray(list)) {\n        this.formData[key] = list\n      }\n    },\n    handleConfirm() {\n      // 将所有的值加入验证\n      this.$refs['validForm'].validate(valid => {\n        if (valid) {\n          // 如果通过验证 是否需要loading\n          if (this.needBtnLoading) {\n            this.isLoading = true\n          }\n          this.$emit('handleConfirm', this.formData, this.completed)\n        }\n      })\n    },\n\n    // 取消loading\n    completed() {\n      this.isLoading = false\n    },\n\n    handleChange(item, value) {\n      this.deleteArr = []\n      item.option.forEach(e => {\n        if (value === e.value) {\n          if (e.filter) {\n            this.deleteArr.push(...e.filter)\n          }\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["el-form-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"el-form-group.vue","sourceRoot":"src/components/plugin/element/form","sourcesContent":["<template>\n  <div class=\"el-form-group\">\n    <el-form ref=\"validForm\" :model=\"formData\" :rules=\"formRules\" :label-width=\"labelWidth + 'px'\">\n      <!--eslint-disable-->\n      <el-form-item\n        v-for=\"(item,index) in formItemList\"\n        v-if=\"!deleteArr.includes(item.key)\"\n        :key=\"index\"\n        :label=\"item.labelName\"\n        :prop=\"item.key\"\n      >\n        <component\n          :is=\"item.component\"\n          v-if=\"item.component\"\n        />\n\n        <slot\n          v-if=\"item.slotName\"\n          :name=\"item.slotName\"\n        />\n\n        <el-input\n          v-if=\"item.type === 'input' && !item.isNumber\"\n          v-model=\"formData[item.key]\"\n          :placeholder=\"item.placeholder\"\n          :disabled=\"item.readonly\"\n          :type=\"item.password ? 'password' : 'text'\"\n          size=\"small\"\n        />\n\n        <el-input\n          v-if=\"item.type === 'input' && item.isNumber\"\n          v-model.number=\"formData[item.key]\"\n          :placeholder=\"item.placeholder\"\n          :disabled=\"item.readonly\"\n          :type=\"item.password ? 'password' : 'text'\"\n          size=\"small\"\n        />\n\n        <el-input\n          v-if=\"item.type === 'textarea'\"\n          v-model=\"formData[item.key]\"\n          :rows=\"item.row || 10\"\n          :placeholder=\"item.placeholder\"\n          type=\"textarea\"\n        />\n\n        <el-select\n          v-if=\"item.type === 'select'\"\n          v-model=\"formData[item.key]\"\n          clearable\n          size=\"small\"\n          :placeholder=\"item.placeholder\"\n          @change=\"handleChange(item, formData[item.key])\"\n        >\n          <el-option\n            v-for=\"o in item.option\"\n            :key=\"o.value\"\n            :label=\"o.label\"\n            :value=\"o.value\"\n          />\n        </el-select>\n\n        <el-radio-group\n          v-if=\"item.type === 'radio'\"\n          v-model=\"formData[item.key]\"\n        >\n          <el-radio\n            v-for=\"o in item.option\"\n            :key=\"o.value\"\n            :label=\"o.value\"\n          >\n            {{ o.label }}\n          </el-radio>\n        </el-radio-group>\n\n        <el-checkbox-group\n          v-if=\"item.type === 'checkbox'\"\n          v-model=\"formData[item.key]\"\n          clearable\n          size=\"small\"\n        >\n          <el-checkbox\n            v-for=\"o in item.option\"\n            :key=\"o.value\"\n            :disabled=\"o.disabled\"\n            :label=\"o.value\"\n          >\n            {{ o.label }}\n          </el-checkbox>\n        </el-checkbox-group>\n\n        <el-date-picker\n          v-if=\"item.type === 'daterange'\"\n          v-model=\"formData[item.key]\"\n          :value-format=\"item.valueFormat || 'yyyy-MM-dd'\"\n          type=\"daterange\"\n          size=\"small\"\n          range-separator=\"~\"\n          start-placeholder=\"起始日期\"\n          end-placeholder=\"截止日期\"\n        />\n\n        <el-date-picker\n          v-if=\"item.type === 'date'\"\n          v-model=\"formData[item.key]\"\n          :value-format=\"item.valueFormat || 'yyyy-MM-dd'\"\n          type=\"date\"\n          size=\"small\"\n          placeholder=\"入职日期\"\n        />\n\n        <ElImgUpload\n          v-if=\"item.type === 'upload'\"\n          :exist-image=\"formData[item.key]\"\n          :place-txt=\"item.placeholder\"\n          @handleDelete=\"handleUploadDelete(item.key)\"\n          @handleChange=\"handleUploadChange($event, item.key)\"\n        />\n\n        <ElImgUploadGroup\n          v-if=\"item.type === 'uploadGroup'\"\n          :exist-image-list=\"formData[item.key]\"\n          @handleChange=\"handleUploadGroupChange($event, item.key)\"\n        />\n      </el-form-item>\n\n      <div style=\"text-align:center\">\n        <slot name=\"btnSlot\" />\n        <el-button :loading=\"isLoading\" type=\"primary\" size=\"small\" @click=\"handleConfirm\">\n          {{ confirmBtnName }}\n        </el-button>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport ElImgUpload from './el-img-upload'\nimport ElImgUploadGroup from './el-img-upload-group'\n\nexport default {\n  name: 'ElFormGroup',\n  components: {\n    ElImgUpload,\n    ElImgUploadGroup\n  },\n  props: {\n    labelWidth: {\n      type: Number,\n      default: 120\n    },\n    // 验证规则，参考element\n    formRules: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    // 表单子项列表\n    formItemList: {\n      type: Array,\n      required: true\n    },\n    // 初始化数据\n    initData: {\n      type: Object,\n      default() {\n        return null\n      }\n    },\n\n    confirmBtnName: {\n      type: String,\n      default: '提交'\n    },\n\n    needBtnLoading: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      isLoading: false,\n      formData: {},\n      deleteArr: []\n    }\n  },\n  created() {\n    if (this.initData) {\n      this.formData = this.initData\n      return\n    }\n    this.formItemList.forEach(n => {\n      if (n.type === 'checkbox') {\n        this.$set(this.formData, n.key, [])\n      } else {\n        this.$set(this.formData, n.key, '')\n      }\n    })\n  },\n  methods: {\n    // 如果删除图片\n    handleUploadDelete(key) {\n      this.formData[key] = ''\n    },\n\n    // 上传图片后，将图片信息保存到对应参数中\n    handleUploadChange(url, key) {\n      this.formData[key] = url\n    },\n\n    // 上传图片后，将图片信息保存到对应参数中\n    handleUploadGroupChange(list, key) {\n      if (Array.isArray(list)) {\n        this.formData[key] = list\n      }\n    },\n    handleConfirm() {\n      // 将所有的值加入验证\n      this.$refs['validForm'].validate(valid => {\n        if (valid) {\n          // 如果通过验证 是否需要loading\n          if (this.needBtnLoading) {\n            this.isLoading = true\n          }\n          this.$emit('handleConfirm', this.formData, this.completed)\n        }\n      })\n    },\n\n    // 取消loading\n    completed() {\n      this.isLoading = false\n    },\n\n    handleChange(item, value) {\n      this.deleteArr = []\n      item.option.forEach(e => {\n        if (value === e.value) {\n          if (e.filter) {\n            this.deleteArr.push(...e.filter)\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" ref=\"stylesheet/scss\">\n.el-form-group{}\n</style>\n"]}]}