{"remainingRequest":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edy/Desktop/gitlab/image-hotpot/src/components/plugin/element/form/el-img-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edy/Desktop/gitlab/image-hotpot/src/components/plugin/element/form/el-img-upload.vue","mtime":1628478882845},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js","mtime":1628478904830},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1628478909545}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst uploadUrl = process.env.NODE_ENV === 'production' ? 'https://jsonplaceholder.typicode.com/posts/' : 'https://jsonplaceholder.typicode.com/posts/'\nexport default {\n  name: 'ElImgUpload',\n  props: {\n    existImage: {\n      type: String,\n      default: ''\n    },\n    placeTxt: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      uploadUrl,\n      imageUrl: ''\n    }\n  },\n  watch: {\n    existImage(val) {\n      this.imageUrl = val\n    }\n  },\n  created() {\n    this.imageUrl = this.existImage\n  },\n  methods: {\n    handleAvatarSuccess(res, file) {\n      this.imageUrl = res.fileUrl\n      this.$emit('handleChange', this.imageUrl)\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png'\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 2MB!')\n      }\n      return isJPG && isLt2M\n    },\n    handleDelete() {\n      this.$confirm('确认删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.imageUrl = ''\n        this.$emit('handleDelete')\n      })\n    }\n  }\n}\n",{"version":3,"sources":["el-img-upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"el-img-upload.vue","sourceRoot":"src/components/plugin/element/form","sourcesContent":["<template>\n  <div class=\"el-img-upload\">\n    <el-upload\n      :action=\"uploadUrl\"\n      :show-file-list=\"false\"\n      :on-success=\"handleAvatarSuccess\"\n      :before-upload=\"beforeAvatarUpload\"\n      class=\"avatar-uploader\"\n    >\n      <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\" />\n      <i v-if=\"imageUrl\" class=\"el-icon-circle-close\" @click.stop=\"handleDelete\" />\n      <div slot=\"tip\" class=\"el-upload__tip\">\n        {{ placeTxt }}\n      </div>\n    </el-upload>\n  </div>\n</template>\n\n<script>\nconst uploadUrl = process.env.NODE_ENV === 'production' ? 'https://jsonplaceholder.typicode.com/posts/' : 'https://jsonplaceholder.typicode.com/posts/'\nexport default {\n  name: 'ElImgUpload',\n  props: {\n    existImage: {\n      type: String,\n      default: ''\n    },\n    placeTxt: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      uploadUrl,\n      imageUrl: ''\n    }\n  },\n  watch: {\n    existImage(val) {\n      this.imageUrl = val\n    }\n  },\n  created() {\n    this.imageUrl = this.existImage\n  },\n  methods: {\n    handleAvatarSuccess(res, file) {\n      this.imageUrl = res.fileUrl\n      this.$emit('handleChange', this.imageUrl)\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png'\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG或者PNG 格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 2MB!')\n      }\n      return isJPG && isLt2M\n    },\n    handleDelete() {\n      this.$confirm('确认删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.imageUrl = ''\n        this.$emit('handleDelete')\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" ref=\"stylesheet/scss\">\n.el-img-upload{}\n</style>\n\n<style lang=\"scss\">\n  .el-img-upload{\n    .el-upload {\n      width: 120px;\n      height: 120px;\n      border: 1px dashed #d9d9d9;\n      border-radius: 6px;\n      cursor: pointer;\n      position: relative;\n      overflow: hidden;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      .el-icon-plus{\n        font-size: 30px;\n        color: #999999;\n      }\n      .el-icon-circle-close{\n        position: absolute;\n        color: #999999;\n        top: 2px;\n        right: 2px;\n        z-index: 100;\n        font-size: 15px;\n        opacity: 0.5;\n        transition: opacity 0.2s;\n        &:hover{\n          opacity: 0.8;\n          color: #ef032a;\n        }\n      }\n    }\n  }\n</style>\n"]}]}