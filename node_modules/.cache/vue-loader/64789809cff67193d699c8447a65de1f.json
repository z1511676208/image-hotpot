{"remainingRequest":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edy/Desktop/gitlab/image-hotpot/src/layout/components/TagsView/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edy/Desktop/gitlab/image-hotpot/src/layout/components/TagsView/index.vue","mtime":1628478882847},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js","mtime":1628478904830},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1628478909545}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ScrollPane from './ScrollPane'\n\nexport default {\n  name: 'TagsView',\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {}\n    }\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews\n    }\n  },\n  watch: {\n    $route() {\n      this.addTags()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  },\n  mounted() {\n    this.addTags()\n  },\n  methods: {\n    handleScroll(e) {\n      console.log(e)\n    },\n    isActive(route) {\n      return route.path === this.$route.path\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix\n    },\n    addTags() {\n      const { name } = this.$route\n      if (name) {\n        this.$store.dispatch('tagsView/addVisitedView', this.$route)\n      }\n      return false\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch('tagsView/delVisitedView', view).then((visitedViews) => {\n        if (this.isActive(view)) {\n          this.toLastView(visitedViews, view)\n        }\n      })\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0]\n      if (latestView) {\n        this.$router.push(latestView.fullPath)\n      } else {\n        this.$router.push('/')\n      }\n    },\n    openMenu(tag, e) {\n      console.log('鼠标右键事件', tag, e)\n      const menuMinWidth = 105\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n      const offsetWidth = this.$el.offsetWidth // container width\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      this.top = e.layerY\n      this.visible = true\n      this.selectedTag = tag\n    },\n    closeMenu() {\n      console.log('关闭菜单')\n      this.visible = false\n    },\n    refreshSelectedTag(view) {\n      const { fullPath } = view\n      this.$nextTick(() => {\n        this.$router.replace({\n          path: '/redirect' + fullPath\n        })\n      })\n    },\n    closeOthersTags(view) {\n      this.$store.dispatch('tagsView/delOthersVisitedViews', view).then((visitedViews) => {\n        this.toLastView(visitedViews, view)\n      })\n    },\n    closeAllTags(view) {\n      this.$store.dispatch('tagsView/delAllVisitedViews').then((visitedViews) => {\n        // if (this.affixTags.some(tag => tag.path === view.path)) {\n        //   return\n        // }\n        this.toLastView(visitedViews, view)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\n    <!--@wheel.native.prevent=\"handleScroll\"-->\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\n      <router-link\n        v-for=\"tag in visitedViews\"\n        :key=\"tag.path\"\n        :to=\"tag.path\"\n        :class=\"isActive(tag)?'active':''\"\n        class=\"tags-view-item\"\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\n        @contextmenu.prevent.native=\"openMenu(tag,$event)\"\n      >\n        {{ tag.title }}\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\n      </router-link>\n    </scroll-pane>\n    <ul v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\n      <li @click=\"refreshSelectedTag(selectedTag)\">\n        刷新\n      </li>\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\">\n        关闭\n      </li>\n      <li @click=\"closeOthersTags(selectedTag)\">\n        关闭其他\n      </li>\n      <li @click=\"closeAllTags\">\n        关闭所有\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ScrollPane from './ScrollPane'\n\nexport default {\n  name: 'TagsView',\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {}\n    }\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews\n    }\n  },\n  watch: {\n    $route() {\n      this.addTags()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  },\n  mounted() {\n    this.addTags()\n  },\n  methods: {\n    handleScroll(e) {\n      console.log(e)\n    },\n    isActive(route) {\n      return route.path === this.$route.path\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix\n    },\n    addTags() {\n      const { name } = this.$route\n      if (name) {\n        this.$store.dispatch('tagsView/addVisitedView', this.$route)\n      }\n      return false\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch('tagsView/delVisitedView', view).then((visitedViews) => {\n        if (this.isActive(view)) {\n          this.toLastView(visitedViews, view)\n        }\n      })\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0]\n      if (latestView) {\n        this.$router.push(latestView.fullPath)\n      } else {\n        this.$router.push('/')\n      }\n    },\n    openMenu(tag, e) {\n      console.log('鼠标右键事件', tag, e)\n      const menuMinWidth = 105\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n      const offsetWidth = this.$el.offsetWidth // container width\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      this.top = e.layerY\n      this.visible = true\n      this.selectedTag = tag\n    },\n    closeMenu() {\n      console.log('关闭菜单')\n      this.visible = false\n    },\n    refreshSelectedTag(view) {\n      const { fullPath } = view\n      this.$nextTick(() => {\n        this.$router.replace({\n          path: '/redirect' + fullPath\n        })\n      })\n    },\n    closeOthersTags(view) {\n      this.$store.dispatch('tagsView/delOthersVisitedViews', view).then((visitedViews) => {\n        this.toLastView(visitedViews, view)\n      })\n    },\n    closeAllTags(view) {\n      this.$store.dispatch('tagsView/delAllVisitedViews').then((visitedViews) => {\n        // if (this.affixTags.some(tag => tag.path === view.path)) {\n        //   return\n        // }\n        this.toLastView(visitedViews, view)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  $themeColors: #409EFF;\n\n  .tags-view-container{\n    white-space: nowrap;\n    border-top: 1px solid #d8dce5;\n    border-bottom: 1px solid #d8dce5;\n    position: relative;\n\n    .tags-view-wrapper {\n      padding: 4px 0;\n\n      .tags-view-item{\n        display: inline-block;\n        position: relative;\n        cursor: pointer;\n        height: 26px;\n        line-height: 26px;\n        border: 1px solid #d8dce5;\n        color: #495060;\n        background: #fff;\n        padding: 0 8px;\n        font-size: 12px;\n        margin-left: 5px;\n        text-decoration: none;\n        &:first-of-type {\n          margin-left: 15px;\n        }\n        &:last-of-type {\n          margin-right: 15px;\n        }\n        &.active {\n          background-color: $themeColors;\n          color: #fff;\n          border-color: $themeColors;\n          &::before {\n            content: '';\n            background: #fff;\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            position: relative;\n            margin-right: 2px;\n          }\n        }\n        .el-icon-close {\n          width: 16px;\n          height: 16px;\n          vertical-align: 2px;\n          border-radius: 50%;\n          text-align: center;\n          transition: all .3s cubic-bezier(.645, .045, .355, 1);\n          transform-origin: 100% 50%;\n          &:before {\n            transform: scale(.6);\n            display: inline-block;\n            vertical-align: -3px;\n          }\n          &:hover {\n            background-color: #b4bccc;\n            color: #fff;\n          }\n        }\n      }\n    }\n\n    .contextmenu {\n      margin: 0;\n      background: #fff;\n      z-index: 3000;\n      position: absolute;\n      list-style-type: none;\n      padding: 5px 0;\n      border-radius: 4px;\n      font-size: 12px;\n      font-weight: 400;\n      color: #333;\n      box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\n      li {\n        margin: 0;\n        padding: 7px 16px;\n        cursor: pointer;\n        &:hover {\n          background: #eee;\n        }\n      }\n    }\n  }\n</style>\n"]}]}