{"remainingRequest":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edy/Desktop/gitlab/image-hotpot/src/components/hotpotModal/OperationFloor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edy/Desktop/gitlab/image-hotpot/src/components/hotpotModal/OperationFloor.vue","mtime":1628822081718},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js","mtime":1628478904830},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1628478909545}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AreaBox from \"./AreaBox\";\nimport { checkURL } from \"@/utils/validate\";\n\nexport default {\n  name: \"OperationFloor\",\n  components: {\n    AreaBox\n  },\n  props: {\n    imgs: {\n      type: String,\n      default: () => \"\"\n    },\n    isHotPot: {\n      type: Boolean,\n      default: () => false\n    },\n    imgAreaData: {\n      type: Array,\n      default: () => []\n    },\n    linkInputStyle: {\n      type: Object,\n      default: () => ({\n        width: \"250px\"\n      })\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      starX: 0,\n      starY: 0,\n      areaWidth: 0,\n      areaHeight: 0,\n      caseShow: false,\n      nowImgWidth: null,\n      areaData: [],\n      imgNum: 1,\n      parentWidth: 0,\n      parentHeight: 0\n    };\n  },\n  computed: {},\n  watch: {\n    imgAreaData(val) {\n      this.areaData = [...val];\n    }\n  },\n  mounted() {\n    this.areaData = [...this.imgAreaData];\n  },\n  methods: {\n    openModal() {\n      this.$nextTick(() => {\n        const parentDiv = document.querySelector(\"#img-box-container\");\n        //获取元素的宽高\n        this.parentWidth = parentDiv.clientWidth;\n        this.parentHeight = parentDiv.clientHeight;\n        // console.log(\"this.parentWidth\", this.parentWidth, this.parentHeight)\n      });\n    },\n    closeModal() {\n      this.$confirm(\"未保存内容，是否在离开前放弃保存？\", \"提示信息\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      })\n        .then(() => {\n          this.dialogVisible = false;\n          this.areaData = [...this.imgAreaData];\n        })\n        .catch((action) => {\n          console.log(action);\n        });\n    },\n    clearList() {\n      this.$confirm(\"确定放弃修改内容嘛？\", \"提示信息\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      })\n        .then(() => {\n          this.areaData = this.imgAreaData || [];\n          this.dialogVisible = false;\n        })\n        .catch((action) => {\n          console.log(action);\n        });\n\n      // this.imgNum = 1;\n    },\n    onBlur(e, index) {\n      console.log(\"areaData_data\", e, this.areaData[index]);\n    },\n    // 绘画热区开始\n    mouseDown(e) {\n      e.preventDefault();\n      this.caseShow = true;\n      // 记录滑动的初始值\n      this.starX = e.layerX;\n      this.starY = e.layerY;\n      // 鼠标滑动的过程\n      if (!document.onmousemove) {\n        document.onmousemove = (ev) => {\n          this.areaWidth = ev.layerX - this.starX;\n          this.areaHeight = ev.layerY - this.starY;\n        };\n      }\n    },\n    // 绘画热区结束\n    changeStop() {\n      document.onmousemove = null;\n      this.imgNum = this.areaData.length + 1;\n      if (this.caseShow && this.areaWidth > 10 && this.areaHeight > 10) {\n        const data = {\n          number: this.imgNum,\n          starX: this.starX,\n          starY: this.starY,\n          areaWidth: this.areaWidth,\n          areaHeight: this.areaHeight,\n          nowImgWidth: this.$refs.backgroundImg.width,\n          link: \"\",\n          title: \"\",\n          target: \"_self\"\n        };\n        this.areaData.push(data);\n      }\n      // 初始化绘图\n      this.caseShow = false;\n      this.starX = 0;\n      this.starY = 0;\n      this.areaWidth = 0;\n      this.areaHeight = 0;\n      // this.saveAreaData()\n    },\n    // 删除指定热区\n    delAreaBox(index) {\n      /* 删除某个热区 */\n      this.areaData.splice(index, 1);\n      this.$emit(\"delAreaData\", this.areaData);\n      /* 删除后 每个热区按顺序重新编号 */\n      if (this.areaData) {\n        const arr = this.areaData.filter((i) => i.number > index);\n        if (!arr) return;\n        arr.forEach((i) => i.number--);\n        if (this.areaData[this.areaData.length - 1]) {\n          this.imgNum = this.areaData[this.areaData.length - 1].number + 1;\n        } else {\n          this.imgNum = 1;\n        }\n      }\n    },\n    // 添加网址\n    addURL(index, url, title) {\n      let obj = {\n        ...this.areaData[index],\n        title,\n        link: url\n      };\n      this.$set(this.areaData, index, obj);\n      // this.saveAreaData()\n    },\n    // 保存热区信息\n    saveAreaData() {\n      if (\n        (this.areaData && !this.areaData.length) ||\n        !this.checkData(this.areaData)\n      ) {\n        this.$message.error(\"热区是否配置链接、是否至少添加一个热区?\");\n        return;\n      }\n      this.$emit(\"saveAreaData\", this.areaData);\n      this.dialogVisible = false;\n      this.$message.success(\"保存成功!!\");\n    },\n    checkData(list) {\n      let isCheck = true;\n      list.some((val) => {\n        if (!val.link || !checkURL(val.link)) {\n          isCheck = false;\n        }\n      });\n      return isCheck;\n    }\n  }\n};\n",{"version":3,"sources":["OperationFloor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"OperationFloor.vue","sourceRoot":"src/components/hotpotModal","sourcesContent":["<template>\n  <el-dialog\n    title=\"编辑热区\"\n    :visible.sync=\"dialogVisible\"\n    top=\"8vh\"\n    width=\"1200px\"\n    center\n    :before-close=\"closeModal\"\n    :close-on-click-modal=\"false\"\n    @open=\"openModal\"\n  >\n    <div class=\"operationFloor\">\n      <div class=\"imgBox\" @mouseup.left.stop=\"changeStop()\">\n        <div ref=\"container\" id=\"img-box-container\" class=\"container\">\n          <img\n            ref=\"backgroundImg\"\n            :src=\"imgs\"\n            ondragstart=\"return false;\"\n            oncontextmenu=\"return false;\"\n            onselect=\"document.selection.empty();\"\n            alt=\"img\"\n            @mousedown.left.stop=\"mouseDown($event)\"\n          />\n          <!--draw hotpot-->\n          <div\n            v-show=\"caseShow\"\n            :style=\"{\n              width: areaWidth + 'px',\n              height: areaHeight + 'px',\n              left: starX + 'px',\n              top: starY + 'px'\n            }\"\n            class=\"area\"\n          />\n          <!--be hotpot-->\n          <AreaBox\n            v-for=\"(item, index) in areaData\"\n            :area-data-index=\"index\"\n            :key=\"'area' + index\"\n            :link=\"item.link\"\n            :title=\"item.title\"\n            :type=\"parseInt(item.type)\"\n            :area-init.sync=\"item\"\n            :parent-width=\"parentWidth\"\n            :parent-height=\"parentHeight\"\n            @delAreaBox=\"delAreaBox\"\n            @addURL=\"addURL\"\n          />\n        </div>\n      </div>\n      <!-- 热区链接配置 -->\n      <div class=\"form\">\n        <div v-for=\"(item, index) in areaData\" :key=\"index\" class=\"form-row\">\n          <div class=\"form-item\">\n            <el-tag>热区{{ item.number }}</el-tag>\n          </div>\n          <div class=\"form-item\">\n            <label class=\"label\">名称</label\n            ><el-input v-model=\"item.title\" :style=\"linkInputStyle\" />\n          </div>\n          <div class=\"form-item\">\n            <label class=\"label\">链接</label\n            ><el-input\n              v-model.trim=\"item.link\"\n              :style=\"linkInputStyle\"\n              @blur=\"onBlur($event, index)\"\n            />\n          </div>\n          <i class=\"el-icon-delete\" @click=\"delAreaBox(index)\" />\n        </div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeModal\"> 取 消 </el-button>\n        <el-button type=\"primary\" @click=\"saveAreaData\"> 保 存 </el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport AreaBox from \"./AreaBox\";\nimport { checkURL } from \"@/utils/validate\";\n\nexport default {\n  name: \"OperationFloor\",\n  components: {\n    AreaBox\n  },\n  props: {\n    imgs: {\n      type: String,\n      default: () => \"\"\n    },\n    isHotPot: {\n      type: Boolean,\n      default: () => false\n    },\n    imgAreaData: {\n      type: Array,\n      default: () => []\n    },\n    linkInputStyle: {\n      type: Object,\n      default: () => ({\n        width: \"250px\"\n      })\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      starX: 0,\n      starY: 0,\n      areaWidth: 0,\n      areaHeight: 0,\n      caseShow: false,\n      nowImgWidth: null,\n      areaData: [],\n      imgNum: 1,\n      parentWidth: 0,\n      parentHeight: 0\n    };\n  },\n  computed: {},\n  watch: {\n    imgAreaData(val) {\n      this.areaData = [...val];\n    }\n  },\n  mounted() {\n    this.areaData = [...this.imgAreaData];\n  },\n  methods: {\n    openModal() {\n      this.$nextTick(() => {\n        const parentDiv = document.querySelector(\"#img-box-container\");\n        //获取元素的宽高\n        this.parentWidth = parentDiv.clientWidth;\n        this.parentHeight = parentDiv.clientHeight;\n        // console.log(\"this.parentWidth\", this.parentWidth, this.parentHeight)\n      });\n    },\n    closeModal() {\n      this.$confirm(\"未保存内容，是否在离开前放弃保存？\", \"提示信息\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      })\n        .then(() => {\n          this.dialogVisible = false;\n          this.areaData = [...this.imgAreaData];\n        })\n        .catch((action) => {\n          console.log(action);\n        });\n    },\n    clearList() {\n      this.$confirm(\"确定放弃修改内容嘛？\", \"提示信息\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      })\n        .then(() => {\n          this.areaData = this.imgAreaData || [];\n          this.dialogVisible = false;\n        })\n        .catch((action) => {\n          console.log(action);\n        });\n\n      // this.imgNum = 1;\n    },\n    onBlur(e, index) {\n      console.log(\"areaData_data\", e, this.areaData[index]);\n    },\n    // 绘画热区开始\n    mouseDown(e) {\n      e.preventDefault();\n      this.caseShow = true;\n      // 记录滑动的初始值\n      this.starX = e.layerX;\n      this.starY = e.layerY;\n      // 鼠标滑动的过程\n      if (!document.onmousemove) {\n        document.onmousemove = (ev) => {\n          this.areaWidth = ev.layerX - this.starX;\n          this.areaHeight = ev.layerY - this.starY;\n        };\n      }\n    },\n    // 绘画热区结束\n    changeStop() {\n      document.onmousemove = null;\n      this.imgNum = this.areaData.length + 1;\n      if (this.caseShow && this.areaWidth > 10 && this.areaHeight > 10) {\n        const data = {\n          number: this.imgNum,\n          starX: this.starX,\n          starY: this.starY,\n          areaWidth: this.areaWidth,\n          areaHeight: this.areaHeight,\n          nowImgWidth: this.$refs.backgroundImg.width,\n          link: \"\",\n          title: \"\",\n          target: \"_self\"\n        };\n        this.areaData.push(data);\n      }\n      // 初始化绘图\n      this.caseShow = false;\n      this.starX = 0;\n      this.starY = 0;\n      this.areaWidth = 0;\n      this.areaHeight = 0;\n      // this.saveAreaData()\n    },\n    // 删除指定热区\n    delAreaBox(index) {\n      /* 删除某个热区 */\n      this.areaData.splice(index, 1);\n      this.$emit(\"delAreaData\", this.areaData);\n      /* 删除后 每个热区按顺序重新编号 */\n      if (this.areaData) {\n        const arr = this.areaData.filter((i) => i.number > index);\n        if (!arr) return;\n        arr.forEach((i) => i.number--);\n        if (this.areaData[this.areaData.length - 1]) {\n          this.imgNum = this.areaData[this.areaData.length - 1].number + 1;\n        } else {\n          this.imgNum = 1;\n        }\n      }\n    },\n    // 添加网址\n    addURL(index, url, title) {\n      let obj = {\n        ...this.areaData[index],\n        title,\n        link: url\n      };\n      this.$set(this.areaData, index, obj);\n      // this.saveAreaData()\n    },\n    // 保存热区信息\n    saveAreaData() {\n      if (\n        (this.areaData && !this.areaData.length) ||\n        !this.checkData(this.areaData)\n      ) {\n        this.$message.error(\"热区是否配置链接、是否至少添加一个热区?\");\n        return;\n      }\n      this.$emit(\"saveAreaData\", this.areaData);\n      this.dialogVisible = false;\n      this.$message.success(\"保存成功!!\");\n    },\n    checkData(list) {\n      let isCheck = true;\n      list.some((val) => {\n        if (!val.link || !checkURL(val.link)) {\n          isCheck = false;\n        }\n      });\n      return isCheck;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\" ref=\"stylesheet/scss\">\n.btn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 0;\n}\n.dialog-footer {\n  text-align: right;\n  margin-top: 20px;\n  margin-right: 20px;\n}\n.operationFloor {\n  position: relative;\n  max-height: 75vh;\n  overflow-y: auto;\n  .header {\n    .titleBox {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      height: 100px;\n      .name {\n        font-size: 13px;\n        font-weight: bold;\n      }\n    }\n    .textBox {\n      font-size: 12px;\n      color: #777;\n      margin-bottom: 10px;\n    }\n  }\n  .imgBox {\n    display: flex;\n    justify-content: center;\n    .container {\n      position: relative;\n      overflow: hidden;\n    }\n    img {\n      cursor: crosshair;\n      display: block;\n    }\n    .area {\n      position: absolute;\n      width: 200px;\n      height: 200px;\n      left: 200px;\n      top: 300px;\n      background: rgba(#2980b9, 0.3);\n      border: 1px dashed #34495e;\n    }\n  }\n}\n.form {\n  font-size: 12px;\n  width: 100%;\n  .form-row {\n    display: flex;\n    margin: 8px 0;\n    align-items: center;\n    .form-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      white-space: nowrap;\n      margin: 0 5px;\n      .label {\n        margin-right: 10px;\n      }\n    }\n  }\n  .el-icon-delete {\n    font-size: 16px;\n  }\n}\n</style>\n"]}]}