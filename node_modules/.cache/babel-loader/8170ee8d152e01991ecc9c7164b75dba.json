{"remainingRequest":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js!/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/edy/Desktop/gitlab/image-hotpot/src/store/modules/tagsView.js","dependencies":[{"path":"/Users/edy/Desktop/gitlab/image-hotpot/src/store/modules/tagsView.js","mtime":1628478882848},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/cache-loader/dist/cjs.js","mtime":1625024217486},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/babel-loader/lib/index.js","mtime":1628478904830},{"path":"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1625024216493}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/edy/Desktop/gitlab/image-hotpot/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nvar state = {\n  visitedViews: [],\n  cachedViews: []\n};\nvar mutations = {\n  ADD_VISITED_VIEW: function ADD_VISITED_VIEW(state, view) {\n    if (state.visitedViews.some(function (v) {\n      return v.path === view.path;\n    })) return;\n    state.visitedViews.push(Object.assign({}, view, {\n      title: view.meta.title || 'no-name'\n    }));\n  },\n  DEL_VISITED_VIEW: function DEL_VISITED_VIEW(state, view) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = state.visitedViews.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            i = _step$value[0],\n            v = _step$value[1];\n\n        if (v.path === view.path) {\n          state.visitedViews.splice(i, 1);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n  DEL_OTHERS_VISITED_VIEWS: function DEL_OTHERS_VISITED_VIEWS(state, view) {\n    state.visitedViews = state.visitedViews.filter(function (v) {\n      return v.meta.affix || v.path === view.path;\n    });\n  },\n  DEL_ALL_VISITED_VIEWS: function DEL_ALL_VISITED_VIEWS(state) {\n    // keep affix tags\n    console.log(state.visitedViews, 'visitedViews');\n    var affixTags = state.visitedViews.filter(function (tag) {\n      return tag.meta.affix;\n    });\n    state.visitedViews = affixTags;\n  }\n};\nvar actions = {\n  addVisitedView: function addVisitedView(_ref, view) {\n    var commit = _ref.commit;\n    commit('ADD_VISITED_VIEW', view);\n  },\n  delVisitedView: function delVisitedView(_ref2, view) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve) {\n      commit('DEL_VISITED_VIEW', view);\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  },\n  delOthersVisitedViews: function delOthersVisitedViews(_ref3, view) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve) {\n      commit('DEL_OTHERS_VISITED_VIEWS', view);\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  },\n  delAllVisitedViews: function delAllVisitedViews(_ref4) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve) {\n      commit('DEL_ALL_VISITED_VIEWS');\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/edy/Desktop/gitlab/image-hotpot/src/store/modules/tagsView.js"],"names":["state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","v","path","push","Object","assign","title","meta","DEL_VISITED_VIEW","entries","i","splice","DEL_OTHERS_VISITED_VIEWS","filter","affix","DEL_ALL_VISITED_VIEWS","console","log","affixTags","tag","actions","addVisitedView","commit","delVisitedView","Promise","resolve","delOthersVisitedViews","delAllVisitedViews","namespaced"],"mappings":"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","sourcesContent":["const state = {\n  visitedViews: [],\n  cachedViews: []\n}\n\nconst mutations = {\n  ADD_VISITED_VIEW: (state, view) => {\n    if (state.visitedViews.some(v => v.path === view.path)) return\n    state.visitedViews.push(\n      Object.assign({}, view, {\n        title: view.meta.title || 'no-name'\n      })\n    )\n  },\n  DEL_VISITED_VIEW: (state, view) => {\n    for (const [i, v] of state.visitedViews.entries()) {\n      if (v.path === view.path) {\n        state.visitedViews.splice(i, 1)\n        break\n      }\n    }\n  },\n\n  DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n    state.visitedViews = state.visitedViews.filter(v => {\n      return v.meta.affix || v.path === view.path\n    })\n  },\n\n  DEL_ALL_VISITED_VIEWS: state => {\n    // keep affix tags\n    console.log(state.visitedViews, 'visitedViews')\n    const affixTags = state.visitedViews.filter(tag => tag.meta.affix)\n    state.visitedViews = affixTags\n  }\n}\n\nconst actions = {\n  addVisitedView({ commit }, view) {\n    commit('ADD_VISITED_VIEW', view)\n  },\n  delVisitedView({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_VISITED_VIEW', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delOthersVisitedViews({ commit, state }, view) {\n    return new Promise(resolve => {\n      commit('DEL_OTHERS_VISITED_VIEWS', view)\n      resolve([...state.visitedViews])\n    })\n  },\n  delAllVisitedViews({ commit, state }) {\n    return new Promise(resolve => {\n      commit('DEL_ALL_VISITED_VIEWS')\n      resolve([...state.visitedViews])\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}